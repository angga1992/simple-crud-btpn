{"version":3,"sources":["http-commons.js","services/data-services.js","components/add.js","components/list.js","components/contact.js","App.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","AddContact","props","onChangephoto","e","preventDefault","file","target","files","reader","FileReader","onloadend","setState","photo","result","imagePreviewUrl","readAsDataURL","onChangefirstName","bind","onChangelastName","onChangeAge","saveContact","newContact","state","firstName","lastName","age","this","value","dataService","then","response","description","alert","history","push","catch","console","log","$imagePreview","src","className","submitted","onClick","htmlFor","type","required","onChange","name","Component","contactsList","retrievecontacts","refreshList","setActiveContact","removeById","contacts","currentContact","currentIndex","contactDataService","getAll","contact","index","map","to","height","width","Tutorial","onChangePhoto","getContact","updateContact","deleteContact","fistName","match","params","prevState","TutorialDataService","payload","update","message","App","exact","path","component","listComponent","addComponent","contactComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b3fc413.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://simple-contact-crud.herokuapp.com\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-commons\";\n\nclass TutorialDataService {\n  getAll() {\n    return http.get(\"/contact\");\n  }\n\n  get(id) {\n    return http.get(`/contact/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/contact\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/contact/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/contact/${id}`);\n  }\n\n  findById(id) {\n    return http.get(`/contact/${id}`);\n  }\n}\n\nexport default new TutorialDataService();","import React, { Component } from \"react\";\nimport dataService from \"../services/data-services\";\n\nexport default class AddContact extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangefirstName = this.onChangefirstName.bind(this);\n    this.onChangelastName = this.onChangelastName.bind(this);\n    this.onChangephoto = this.onChangephoto.bind(this);\n    this.onChangeAge = this.onChangeAge.bind(this);\n    this.saveContact = this.saveContact.bind(this);\n    this.newContact = this.newContact.bind(this);\n\n    this.state = {\n      id: null,\n      firstName: \"\",\n      lastName: \"\", \n      age: null,\n      photo: \"\",\n      imagePreviewUrl: \"\"\n    };\n  }\n\n  onChangefirstName(e) {\n    this.setState({\n      firstName: e.target.value\n    });\n  }\n\n  onChangelastName(e) {\n    this.setState({\n      lastName: e.target.value\n    });\n  }\n  \n  onChangeAge(e) {\n    this.setState({\n      age: e.target.value\n    });\n  }\n\n  onChangephoto = e => {\n    e.preventDefault()\n\n    let file = e.target.files[0]\n    let reader = new FileReader()\n    reader.onloadend = () => {\n      this.setState({\n        photo: reader.result,\n        imagePreviewUrl: reader.result\n      });\n    }\n\n    reader.readAsDataURL(file)\n  }\n\n  saveContact() {\n    var data = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      age: this.state.age,\n      photo: this.state.photo\n    };\n\n    dataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          firstName: response.data.firstName,\n          lastName: response.data.description,\n          age: response.data.age,\n          photo: response.data.photo,\n        });\n        // console.log(response.data);\n        alert('contact saved')\n        this.props.history.push('/')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newContact() {\n    this.setState({\n      id: null,\n      firstName: \"\",\n      lastName: \"\",\n      age: \"\",\n      photo: \"\"\n    });\n  }\n\n  render() {\n    let {imagePreviewUrl} = this.state;\n    let $imagePreview = null;\n    if (imagePreviewUrl) {\n      $imagePreview = (<img src={imagePreviewUrl} />);\n    }\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newContact}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">firstName</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"firstName\"\n                required\n                value={this.state.firstName}\n                onChange={this.onChangefirstName}\n                name=\"firstName\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">lastName</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"lastName\"\n                required\n                value={this.state.lastName}\n                onChange={this.onChangelastName}\n                name=\"lastName\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Age</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"age\"\n                required\n                value={this.state.age}\n                onChange={this.onChangeAge}\n                name=\"age\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">photo</label>\n              <input\n                type=\"file\"\n                className=\"form-control\"\n                id=\"photo\"\n                required\n                onChange={this.onChangephoto}\n                // onChange={(e) => this.onChangephoto(e.target.files[0])}\n                name=\"file\"\n              />\n            </div>\n            <div className=\"previewImage\">\n              {$imagePreview}\n            </div>\n            <div className=\"add-contact-action\">\n                <button onClick={this.saveContact} className=\"button add-contact\">\n                Submit\n                </button>\n            </div>\n\n          </div>\n        )}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport contactDataService from \"../services/data-services\";\nimport { Link } from \"react-router-dom\";\n\nexport default class contactsList extends Component {\n  constructor(props) {\n    super(props);\n    this.retrievecontacts = this.retrievecontacts.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveContact = this.setActiveContact.bind(this);\n    this.removeById = this.removeById.bind(this);\n\n    this.state = {\n      contacts: [],\n      currentContact: null,\n      currentIndex: -1\n    };\n  }\n\n  componentDidMount() {\n    this.retrievecontacts();\n  }\n\n//   onChangeSearchTitle(e) {\n//     const searchTitle = e.target.value;\n\n//     this.setState({\n//       searchTitle: searchTitle\n//     });\n//   }\n\n  retrievecontacts() {\n    contactDataService.getAll()\n      .then(response => {\n        this.setState({\n          contacts: response.data.data\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrievecontacts();\n    this.setState({\n      currentContact: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveContact(contact, index) {\n    this.setState({\n      currentContact: contact,\n      currentIndex: index\n    });\n  }\n\n  removeById(id) {\n    contactDataService.delete(id)\n      .then(response => {\n        this.refreshList();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\nrender() {\n    const { contacts, currentContact, currentIndex } = this.state;\n\n    return (\n      <div className=\"list row gx-5\">\n        <div className=\"col-md-6\">\n          <h4>contacts List</h4>\n\n          <ul className=\"list-group\">\n            {contacts &&\n              contacts.map((contact, index) => (\n                <li>\n                  <span\n                    className={\n                        \"list-group-item pointer-contact\" +\n                        (index === currentIndex ? \"active\" : \"\")\n                    }\n                    onClick={() => this.setActiveContact(contact, index)}\n                    key={index}\n                  >\n                    {contact.firstName}\n                  </span>\n                  <button\n                    className=\"button remove-contact sizes\"\n                    onClick={this.removeById(contact.id)}\n                  >\n                    Delete\n                  </button>\n                  <button className=\"button edit-contact sizes\">\n                    <Link className=\"link-add\"\n                        to={\"/contact/\" + contact.id}\n                    >\n                        Edit\n                    </Link>\n                  </button>\n                </li>\n              ))}\n          </ul>\n        </div>\n        <div className=\"col-md-6\">\n          {currentContact ? (\n            <div>\n              <div>\n                {currentContact.photo !== 'N/A' ? (\n                    <img height=\"200px\" width=\"200px\" src={currentContact.photo} />\n                ) : (\n                    <div className=\"emptyPhoto\"></div>\n                )}\n              </div>\n              <div>\n                <label>\n                  <strong>Name</strong>\n                </label>{\" \"}\n                {currentContact.firstName} {' '}\n                {currentContact.lastName}\n              </div>\n              <div>\n                <label>\n                  <strong>Age:</strong>\n                </label>{\" \"}\n                {currentContact.age}\n              </div>\n            </div>\n          ) : (\n            <div>\n              <br />\n              <p>Please click on a contact...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/data-services\";\nimport { Link } from \"react-router-dom\";\nexport default class Tutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangefirstName = this.onChangefirstName.bind(this);\n    this.onChangelastName = this.onChangelastName.bind(this);\n    this.onChangeAge = this.onChangeAge.bind(this);\n    this.onChangePhoto = this.onChangePhoto.bind(this);\n    this.getContact = this.getContact.bind(this);\n    this.updateContact = this.updateContact.bind(this);\n    this.deleteContact = this.deleteContact.bind(this);\n\n    this.state = {\n      currentContact: {\n        fistName: \"\",\n        lastName: \"\",\n        age: \"\",\n        photo: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getContact(this.props.match.params.id);\n  }\n\n  onChangefirstName(e) {\n    const firstName = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentContact: {\n          ...prevState.currentContact,\n          firstName: firstName\n        }\n      };\n    });\n  }\n\n  onChangelastName(e) {\n    const lastName = e.target.value;\n    \n    this.setState(prevState => ({\n      currentContact: {\n        ...prevState.currentContact,\n        lastName: lastName\n      }\n    }));\n  }\n\n  onChangeAge(e) {\n    const age = e.target.value;\n    \n    this.setState(prevState => ({\n      currentContact: {\n        ...prevState.currentContact,\n        age: age\n      }\n    }));\n  }\n\n  onChangePhoto(e) {\n    const photo = e.target.value;\n    \n    this.setState(prevState => ({\n      currentContact: {\n        ...prevState.currentContact,\n        photo: photo\n      }\n    }));\n  }\n\n  getContact(id) {\n    TutorialDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentContact: response.data.data\n        });\n        // console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateContact() {\n    let payload = {\n        firstName: this.state.currentContact.firstName,\n        lastName: this.state.currentContact.lastName,\n        age: this.state.currentContact.age,\n        photo: this.state.currentContact.photo\n    }\n    TutorialDataService.update(\n      this.state.currentContact.id,\n      payload\n    )\n    .then(response => {\n        this.setState({\n          message: \"The contact was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deleteContact() {    \n    TutorialDataService.delete(this.state.currentContact.id)\n      .then(response => {\n        this.props.history.push('/contacts')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentContact } = this.state;\n\n    return (\n      <div>\n        {currentContact ? (\n          <div className=\"edit-form\">\n            <h4>Edit Contact</h4>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"firstName\">firstName</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"firstName\"\n                  value={currentContact.firstName}\n                  onChange={this.onChangefirstName}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"lastName\">lastName</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"lastName\"\n                  value={currentContact.lastName}\n                  onChange={this.onChangelastName}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"age\">age</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"age\"\n                  value={currentContact.age}\n                  onChange={this.onChangeAge}\n                />\n              </div>\n              <div className=\"form-group\">\n                <div className=\"content-photo\">\n                    <img className=\"image-contact\" src={currentContact.photo} />\n                </div>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"photo\"\n                  value={currentContact.photo}\n                  onChange={this.onChangePhoto}\n                />\n              </div>\n            </form>\n\n            <div className=\"content-action\">\n                <div className=\"button add-contact\">\n                    <Link className=\"link-add\" to={\"/add\"}>\n                        Add\n                    </Link>\n                </div>\n                <button\n                className=\"button remove-contact\"\n                onClick={this.deleteContact}\n                >\n                Delete\n                </button>\n\n                <button\n                type=\"submit\"\n                className=\"button edit-contact\"\n                onClick={this.updateContact}\n                >\n                Update\n                </button>\n            </div>\n\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a contact...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}","import './App.css';\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nimport addComponent from \"./components/add\";\nimport listComponent from \"./components/list\";\nimport contactComponent from \"./components/contact\";\n// import TutorialsList from \"./components/tutorials-list.component\";\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          {/* <h1 className=\"navbar-brand\">\n            SIMPLE CRUD BTPN\n          </h1> */}\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/list\"} className=\"nav-link\">\n                List Contact\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/list\"]} component={listComponent} />\n            <Route exact path=\"/add\" component={addComponent} />\n            <Route path=\"/contact/:id\" component={contactComponent} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// serviceWorker.unregister();"],"sourceRoot":""}